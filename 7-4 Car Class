Write a class named Car that has the following member variables: 
• year. An i nt that holds the car's model year. 
• make. A string object that holds the make of the car. 
• speed. An int that holds the car's current speed. 
In addition, the class should have the following member functions. 
• Constructor. The constructor should accept the car's year and make as arguments
and assign these values to the object's year and make member variables.
The constructor should initialize the speed member variable to 0.
• Accessors. Appropriate accessor functions should be created to allow values
to be retrieved from an object's year, make, and speed member variables. 
• accelerate. The accelerate function should add 5 to the speed member 
variable each time it is called. 
• brake. The brake function should subtract 5 from the speed member
variable each time it is called. 
Demonstrate the class in a program that creates a Car object and then calls
the accelerate function five times. After each call to the accelerate function,
get the current speed of the car and display it. Then, call the brake function
five times. After each call to the brake function, get the current speed of the car and display it. 
*********************************************************************************************************

#include <iostream>
#include <string>
using namespace std;

class Car {
private:
    int year;
    string make;
    int speed;
public:
    Car(int y, string m){
    year = y;
    make = m;
    speed = 0;
    }
    int getYear(){
    return year;}
    string getMake(){
    return make;}
    int getSpeed(){
    return speed;}
    void accelerate(){
    speed += 5;}
    void brake(){
    if (speed >= 5){speed -= 5;}
    else{speed = 0;}
        }
};

int main(){
Car hotRod(2017, "Mazda");
cout << "I am raiding a "<< hotRod.getYear() <<"  "<< hotRod.getMake() << "hot rod. \n\n";
cout <<" I am accelerating ... \n";
for (int i = 1; i <=5; ++i){
    hotRod.accelerate();
    cout<<" The current speed is "<< hotRod.getSpeed() <<endl;
}
cout << "\n I am braking .. \n";
for (int i = 1; i<=5; ++i){
    hotRod.brake();
    cout<< "The current speed is " << hotRod.getSpeed() << endl;
}
return 0;
}
